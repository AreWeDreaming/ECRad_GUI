'''
Created on Apr 3, 2019

@author: sdenk
'''
import wx
from ECRad_GUI_Widgets import simple_label_tc, simple_label_cb, max_var_in_row
import os
class ConfigPanel(wx.Panel):
    def __init__(self, parent, Config, border=1, maxwidth=max_var_in_row, \
                    parentmode=False, style=wx.TAB_TRAVERSAL | wx.NO_BORDER):
        wx.Panel.__init__(self, parent, wx.ID_ANY, style=style)
        self.name = "ECRad settings"
        columns = 8
        self.sizer = wx.BoxSizer(wx.VERTICAL)
        self.SetSizer(self.sizer)
        self.grid_list = []
        self.labels = []
        self.lines = []
        self.lines.append(wx.StaticLine(self, wx.ID_ANY))
        self.sizer.Add(self.lines[-1], 0, wx.ALL | wx.EXPAND, 5)
        self.labels.append(wx.StaticText(self, wx.ID_ANY, "ECRad Settings"))
        self.sizer.Add(self.labels[-1], 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 5)
        self.lines.append(wx.StaticLine(self, wx.ID_ANY))
        self.sizer.Add(self.lines[-1], 0, wx.ALL | wx.EXPAND, 5)
        self.grid_list.append(wx.GridSizer(0, columns, 0, 0))
        self.dstf_tc = simple_label_tc(self, "dstf", Config.dstf, "string")
        self.grid_list[-1].Add(self.dstf_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.output_cb = simple_label_cb(self, "Extra output", Config.extra_output)
        self.grid_list[-1].Add(self.output_cb, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.raytracing_cb = simple_label_cb(self, "Raytracing", Config.raytracing)
        self.grid_list[-1].Add(self.raytracing_cb, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.ripple_cb = simple_label_cb(self, "Magn. field Ripple", Config.ripple)
        self.grid_list[-1].Add(self.ripple_cb, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.weak_rel_cb = simple_label_cb(self, "Weak rel.", Config.weak_rel)
        self.grid_list[-1].Add(self.weak_rel_cb, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.N_ray_tc = simple_label_tc(self, "# rays", Config.N_ray, "integer")
        self.grid_list[-1].Add(self.N_ray_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.N_freq_tc = simple_label_tc(self, "# frequencies", Config.N_freq, "integer")
        self.grid_list[-1].Add(self.N_freq_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.ratio_for_third_tc = simple_label_tc(self, "omega_c/omega w. 3rd", Config.ratio_for_3rd_harm, "real")
        self.grid_list[-1].Add(self.ratio_for_third_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.considered_modes_tc = simple_label_tc(self, "Modes to consider", Config.considered_modes, "integer")
        self.grid_list[-1].Add(self.considered_modes_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.mode_conv_tc = simple_label_tc(self, "mode conv. ratio", Config.mode_conv, "real")
        self.grid_list[-1].Add(self.mode_conv_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.reflec_X_tc = simple_label_tc(self, "Wall refl. coeff. X-mode", Config.reflec_X, "real")
        self.grid_list[-1].Add(self.reflec_X_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.reflec_O_tc = simple_label_tc(self, "Wall refl. coeff. O-mode", Config.reflec_O, "real")
        self.grid_list[-1].Add(self.reflec_O_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.sizer.Add(self.grid_list[-1], 0, wx.ALL | wx.LEFT, 5)
        self.lines.append(wx.StaticLine(self, wx.ID_ANY))
        self.sizer.Add(self.lines[-1], 0, wx.ALL | wx.EXPAND, 5)
        self.labels.append(wx.StaticText(self, wx.ID_ANY, "Execution Settings"))
        self.sizer.Add(self.labels[-1], 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 5)
        self.lines.append(wx.StaticLine(self, wx.ID_ANY))
        self.sizer.Add(self.lines[-1], 0, wx.ALL | wx.EXPAND, 5)
        self.grid_list.append(wx.GridSizer(0, columns, 0, 0))
        self.working_dir_tc = simple_label_tc(self, "Working dir.", Config.working_dir, "string")
        self.grid_list[-1].Add(self.working_dir_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.debug_cb = simple_label_cb(self, "Debug", Config.debug)
        self.grid_list[-1].Add(self.debug_cb, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.batch_cb = simple_label_cb(self, "Batch", Config.batch)
        self.grid_list[-1].Add(self.batch_cb, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.parallel_cb = simple_label_cb(self, "Parallel", Config.parallel)
        self.grid_list[-1].Add(self.parallel_cb, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.parallel_cores_tc = simple_label_tc(self, "# cores", Config.parallel_cores, "integer")
        self.grid_list[-1].Add(self.parallel_cores_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.wall_time_tc = simple_label_tc(self, "wall time [h]", Config.wall_time, "integer")
        self.grid_list[-1].Add(self.wall_time_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.vmem_tc = simple_label_tc(self, "virtual memory [MB]", Config.vmem, "integer")
        self.grid_list[-1].Add(self.vmem_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.max_points_svec_tc = simple_label_tc(self, "Max points on LOS", Config.max_points_svec, "integer")
        self.grid_list[-1].Add(self.max_points_svec_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.sizer.Add(self.grid_list[-1], 0, wx.ALL | wx.LEFT, 5)
        self.lines.append(wx.StaticLine(self, wx.ID_ANY))
        self.sizer.Add(self.lines[-1], 0, wx.ALL | wx.EXPAND, 5)
        self.labels.append(wx.StaticText(self, wx.ID_ANY, "Scenario Settings"))
        self.sizer.Add(self.labels[-1], 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 5)
        self.lines.append(wx.StaticLine(self, wx.ID_ANY))
        self.sizer.Add(self.lines[-1], 0, wx.ALL | wx.EXPAND, 5)
        self.grid_list.append(wx.GridSizer(0, columns, 0, 0))
        self.ds_large_tc = simple_label_tc(self, "Large step size [m]", Config.large_ds, "real")
        self.grid_list[-1].Add(self.ds_large_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.ds_small_tc = simple_label_tc(self, "Small step size [m]", Config.small_ds, "real")
        self.grid_list[-1].Add(self.ds_small_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.R_shift_tc = simple_label_tc(self, "R shift [m]", Config.R_shift, "real")
        self.grid_list[-1].Add(self.R_shift_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.z_shift_tc = simple_label_tc(self, "z shift [m]", Config.z_shift, "real")
        self.grid_list[-1].Add(self.z_shift_tc, 0, wx.ALL | wx.LEFT | wx.TOP, 5)
        self.sizer.Add(self.grid_list[-1], 0, wx.ALL | wx.LEFT, 5)

    def UpdateConfig(self, Config):
        Config.working_dir = self.working_dir_tc.GetValue()
        if(not Config.working_dir.endswith(os.path.sep)):
            Config.working_dir += os.path.sep
        if(not os.path.isdir(Config.working_dir)):
            print("Selected working directory does not exist - please create it")
            print("Chosen directory: " + Config.working_dir)
            raise IOError("Please specify an existing directory as working directory")
        Config.dstf = self.dstf_tc.GetValue()
        Config.extra_output = self.output_cb.GetValue()
        Config.debug = self.debug_cb.GetValue()
        Config.batch = self.batch_cb.GetValue()
        Config.parallel = self.parallel_cb.GetValue()
        Config.parallel_cores = self.parallel_cores_tc.GetValue()
        Config.wall_time = self.wall_time_tc.GetValue()
        Config.vmem = self.vmem_tc.GetValue()
        Config.raytracing = self.raytracing_cb.GetValue()
        Config.ripple = self.ripple_cb.GetValue()
        Config.weak_rel = self.weak_rel_cb.GetValue()
        Config.N_ray = self.N_ray_tc.GetValue()
        Config.N_freq = self.N_freq_tc.GetValue()
        Config.ratio_for_3rd_harm = self.ratio_for_third_tc.GetValue()
        Config.considered_modes = self.considered_modes_tc.GetValue()
        Config.mode_conv = self.mode_conv_tc.GetValue()
        Config.reflec_X = self.reflec_X_tc.GetValue()
        Config.reflec_O = self.reflec_O_tc.GetValue()
        Config.large_ds = self.ds_large_tc.GetValue()
        Config.small_ds = self.ds_small_tc.GetValue()
        Config.max_points_svec = self.max_points_svec_tc.GetValue()
        Config.R_shift = self.R_shift_tc.GetValue()
        Config.z_shift = self.z_shift_tc.GetValue()
        return Config

    def SetConfig(self, Config):
        self.working_dir_tc.SetValue(Config.working_dir)
        self.dstf_tc.SetValue(Config.dstf)
        self.output_cb.SetValue(Config.extra_output)
        self.debug_cb.SetValue(Config.debug)
        self.batch_cb.SetValue(Config.batch)
        self.parallel_cb.SetValue(Config.parallel)
        self.parallel_cores_tc.SetValue(Config.parallel_cores)
        self.wall_time_tc.SetValue(Config.wall_time)
        self.vmem_tc.SetValue(Config.vmem)
        self.raytracing_cb.SetValue(Config.raytracing)
        self.ripple_cb.SetValue(Config.ripple)
        self.weak_rel_cb.SetValue(Config.weak_rel)
        self.N_ray_tc.SetValue(Config.N_ray)
        self.N_freq_tc.SetValue(Config.N_freq)
        self.ratio_for_third_tc.SetValue(Config.ratio_for_3rd_harm)
        self.considered_modes_tc.SetValue(Config.considered_modes)
        self.mode_conv_tc.SetValue(Config.mode_conv)
        self.reflec_X_tc.SetValue(Config.reflec_X)
        self.reflec_O_tc.SetValue(Config.reflec_O)
        self.ds_large_tc.SetValue(Config.large_ds)
        self.ds_small_tc.SetValue(Config.small_ds)
        self.max_points_svec_tc.SetValue(Config.max_points_svec)
        self.R_shift_tc.SetValue(Config.R_shift)
        self.z_shift_tc.SetValue(Config.z_shift)


